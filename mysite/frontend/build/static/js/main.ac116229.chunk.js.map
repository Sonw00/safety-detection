{"version":3,"sources":["components/Main.tsx","components/Register.tsx","components/Login.tsx","App.tsx","index.tsx"],"names":["Main","isLoggedIn","setIsLoggedIn","useState","csrfToken","setCsrfToken","userInfo","setUserInfo","statuses","setStatuses","postures","setPostures","navigate","useNavigate","useEffect","async","response","axios","get","data","is_logged_in","userResponse","console","log","fetchUserStatus","fetchUserPosture","updateUserStatus","updateUserPosture","error","checkLoginStatus","fetchCsrfToken","interval","setInterval","clearInterval","renderStatusChart","post","headers","renderPostureChart","chartDom","document","getElementById","myChart","echarts","sortedData","sort","a","b","Date","updated_at","getTime","option","title","text","tooltip","trigger","formatter","params","statusText","concat","xAxis","type","map","item","dayjs","format","yAxis","series","status","lineStyle","color","itemStyle","borderWidth","symbolSize","symbol","setOption","axisPointer","posture","legend","grid","left","right","bottom","containLabel","index","name","stack","label","show","emphasis","focus","_jsxs","children","_jsx","style","display","justifyContent","padding","onClick","marginLeft","_Fragment","textAlign","marginTop","age","id","width","height","Register","formData","setFormData","password","address","detailed_address","phone_num","guard_name","guard_phone_num","errors","setErrors","isIdChecked","setIsIdChecked","handleChange","e","_objectSpread","target","value","onSubmit","preventDefault","message","onChange","isAvailable","alert","length","Login","setId","setPassword","event","window","location","href","App","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.ac116229.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport * as echarts from 'echarts';\nimport dayjs from 'dayjs';\n\nconst Main = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [csrfToken, setCsrfToken] = useState<string | null>(null);\n  const [userInfo, setUserInfo] = useState<{ name: string; age: number } | null>(null);\n  const [statuses, setStatuses] = useState<{ status: number; updated_at: string }[]>([]);\n  const [postures, setPostures] = useState<{ posture: number; updated_at: string }[]>([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // 로그인 상태 확인\n    const checkLoginStatus = async () => {\n      try {\n        const response = await axios.get('/api/check_login/');\n        setIsLoggedIn(response.data.is_logged_in);\n        if (response.data.is_logged_in) {\n          const userResponse = await axios.get('/api/user_info/');\n          console.log('User Info:', userResponse.data); // 응답 데이터 출력\n          setUserInfo(userResponse.data);\n          fetchUserStatus();\n          fetchUserPosture();\n          updateUserStatus(); // 로그인 직후 사용자 상태 갱신\n          updateUserPosture(); // 로그인 직후 사용자 자세 갱신\n        }\n      } catch (error) {\n        console.error('로그인 상태 확인 중 오류 발생:', error);\n      }\n    };\n\n    // CSRF 토큰을 가져오는 함수\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get('/api/csrf_token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('CSRF 토큰을 가져오는 중 오류 발생:', error);\n      }\n    };\n\n    checkLoginStatus();\n    fetchCsrfToken();\n\n    // 10분 간격으로 사용자 상태 갱신\n    const interval = setInterval(() => {\n      if (isLoggedIn) {\n        updateUserStatus();\n        updateUserPosture();\n      }\n    }, 10 * 60 * 1000);\n\n    return () => clearInterval(interval);\n  }, [isLoggedIn]);\n\n  const fetchUserStatus = async () => {\n    try {\n      const response = await axios.get('/api/get_status/');\n      setStatuses(response.data.statuses);\n      renderStatusChart(response.data.statuses);\n    } catch (error) {\n      console.error('사용자 상태를 가져오는 중 오류 발생:', error);\n    }\n  };\n\n  const updateUserStatus = async () => {\n    try {\n      const response = await axios.post('/api/update_status/', {}, {\n        headers: {\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      fetchUserStatus();\n    } catch (error) {\n      console.error('사용자 상태를 갱신하는 중 오류 발생:', error);\n    }\n  };\n\n  const fetchUserPosture = async () => {\n    try {\n      const response = await axios.get('/api/get_posture/');\n      setPostures(response.data.postures);\n      renderPostureChart(response.data.postures);\n    } catch (error) {\n      console.error('사용자 자세를 가져오는 중 오류 발생:', error);\n    }\n  };\n\n  const updateUserPosture = async () => {\n    try {\n      const response = await axios.post('/api/update_posture/', {}, {\n        headers: {\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      fetchUserPosture();\n    } catch (error) {\n      console.error('사용자 자세를 갱신하는 중 오류 발생:', error);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await axios.post('/api/logout/', {}, {\n        headers: {\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      setIsLoggedIn(false);\n      navigate('/login');\n    } catch (error) {\n      console.error('로그아웃 중 오류 발생:', error);\n    }\n  };\n\n  const renderStatusChart = (data: { status: number; updated_at: string }[]) => {\n    const chartDom = document.getElementById('main');\n    if (!chartDom) return;\n    const myChart = echarts.init(chartDom);\n    const sortedData = data.sort((a, b) => new Date(a.updated_at).getTime() - new Date(b.updated_at).getTime());\n    const option = {\n      title: {\n        text: 'User Status Over Time'\n      },\n      tooltip: {\n        trigger: 'axis',\n        formatter: (params: any) => {\n          const statusText = params[0].data[1] === 1 ? '정상' : params[0].data[1] === 2 ? '주의' : '위험';\n          return `${params[0].data[0]}<br/>상태: ${statusText}`;\n        }\n      },\n      xAxis: {\n        type: 'category',\n        data: sortedData.map(item => dayjs(item.updated_at).format('MM-DD HH:mm:ss'))\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          data: sortedData.map(item => [dayjs(item.updated_at).format('MM-DD HH:mm:ss'), item.status]),\n          type: 'line',\n          lineStyle: {\n            color: '#5470C6' // 라인 색깔\n          },\n          itemStyle: {\n            color: (params: any) => {\n              if (params.data[1] === 1) return 'green'; // 점의 색깔을 초록색으로 변경\n              if (params.data[1] === 2) return 'yellow';\n              return 'red';\n            },\n            borderWidth: 2\n          },\n          symbolSize: 10,\n          symbol: 'circle' // 점의 모양을 원으로 설정\n        }\n      ]\n    };\n    myChart.setOption(option);\n  };\n\n  const renderPostureChart = (data: { posture: number; updated_at: string }[]) => {\n    const chartDom = document.getElementById('posture');\n    if (!chartDom) return;\n    const myChart = echarts.init(chartDom);\n    const postureText = ['Downstair', 'Upstair', 'Running', 'Sitdown', 'StandUp', 'Walking', 'Fall'];\n    const sortedData = data.sort((a, b) => new Date(a.updated_at).getTime() - new Date(b.updated_at).getTime());\n    const option = {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        },\n        formatter: (params: any) => {\n          const postureText = ['Downstair', 'Upstair', 'Running', 'Sitdown', 'StandUp', 'Walking', 'Fall'];\n          const posture = params[0].data[1];\n          return `${params[0].data[0]}<br/>자세: ${postureText[posture]}`;\n        }\n      },\n      legend: {},\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '70%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'value'\n      },\n      yAxis: {\n        type: 'category',\n        data: ['posture']\n      },\n      series: postureText.map((text, index) => ({\n        name: text,\n        type: 'bar',\n        stack: 'total',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: sortedData.map(item => (item.posture === index ? 1 : 0))\n      }))\n    };\n    myChart.setOption(option);\n  };\n\n  return (\n    <div>\n      <div style={{ display: 'flex', justifyContent: 'flex-end', padding: '10px' }}>\n        {isLoggedIn ? (\n          <button onClick={handleLogout} style={{ marginLeft: '10px' }}>Logout</button>\n        ) : (\n          <>\n            <button onClick={() => navigate('/login')} style={{ marginLeft: '10px' }}>Login</button>\n            <button onClick={() => navigate('/register')} style={{ marginLeft: '10px' }}>Register</button>\n          </>\n        )}\n      </div>\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\n        {isLoggedIn && userInfo ? (\n          <h1>{userInfo.name}님 ({userInfo.age}세), 현재 웹에 접속하셨습니다!</h1>\n        ) : (\n          <h1>Welcome to the Main Page</h1>\n        )}\n      </div>\n      <div id=\"main\" style={{ width: '100%', height: '400px' }}></div>\n      <div id=\"posture\" style={{ width: '100%', height: '400px', marginTop: '20px' }}></div>\n    </div>\n  );\n};\n\nexport default Main;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Register = () => {\n  const [csrfToken, setCsrfToken] = useState<string | null>(null);\n  const [formData, setFormData] = useState({\n    id: '',\n    password: '',\n    name: '',\n    age: '',\n    address: '',\n    detailed_address: '',\n    phone_num: '',\n    guard_name: '',\n    guard_phone_num: ''\n  });\n  const [errors, setErrors] = useState<string[]>([]);\n  const [isIdChecked, setIsIdChecked] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      const response = await axios.get('/api/csrf_token/');\n      setCsrfToken(response.data.csrfToken);\n    };\n    fetchCsrfToken();\n  }, []);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    if (e.target.name === 'id') {\n      setIsIdChecked(false); // ID가 변경되면 중복 검사 상태를 초기화\n    }\n  };\n\n  const handleIdCheck = async () => {\n    try {\n      const response = await axios.post('/api/check_id/', { id: formData.id }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      if (response.data.isAvailable) {\n        alert('사용 가능한 ID입니다.');\n        setIsIdChecked(true);\n      } else {\n        alert('이미 사용 중인 ID입니다.');\n        setIsIdChecked(false);\n      }\n    } catch (error) {\n      console.error('ID 중복 검사 중 오류 발생:', error);\n      setIsIdChecked(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setErrors([]);\n    if (!isIdChecked) {\n      setErrors(['ID 중복 검사를 완료해주세요.']);\n      return;\n    }\n    try {\n      const response = await axios.post('/api/signup/', formData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      console.log('회원가입 성공:', response.data);\n      navigate('/login');\n    } catch (error: any) {\n      if (error.response && error.response.data) {\n        setErrors([error.response.data.message]);\n      } else {\n        setErrors(['회원가입 중 오류가 발생했습니다.']);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>Back</button> {/* 뒤로가기 버튼 */}\n      <h1>회원가입</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>ID:</label>\n          <input type=\"text\" name=\"id\" value={formData.id} onChange={handleChange} />\n          <button type=\"button\" onClick={handleIdCheck}>중복 검사</button>\n        </div>\n        <div>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Name:</label>\n          <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Age:</label>\n          <input type=\"text\" name=\"age\" value={formData.age} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Address:</label>\n          <input type=\"text\" name=\"address\" value={formData.address} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Detailed Address:</label>\n          <input type=\"text\" name=\"detailed_address\" value={formData.detailed_address} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Phone Number:</label>\n          <input type=\"text\" name=\"phone_num\" value={formData.phone_num} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Guard Name:</label>\n          <input type=\"text\" name=\"guard_name\" value={formData.guard_name} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Guard Phone Number:</label>\n          <input type=\"text\" name=\"guard_phone_num\" value={formData.guard_phone_num} onChange={handleChange} />\n        </div>\n        <button type=\"submit\">등록</button>\n        <button type=\"button\" onClick={() => navigate('/login')}>로그인</button>\n      </form>\n      {errors.length > 0 && (\n        <div style={{ color: 'red' }}>\n          {errors.map((error, index) => (\n            <p key={index}>{error}</p>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Register;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Login = () => {\n  const [csrfToken, setCsrfToken] = useState<string | null>(null);\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    // CSRF 토큰을 가져오는 함수\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get('/api/csrf_token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('CSRF 토큰을 가져오는 중 오류 발생:', error);\n      }\n    };\n\n    fetchCsrfToken();\n  }, []);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/login/', {\n        id,\n        password\n      }, {\n        headers: {\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      console.log('로그인 성공:', response.data);\n      // 로그인 성공 시 메인 페이지로 이동\n      window.location.href = '/';\n    } catch (error) {\n      console.error('로그인 중 오류 발생:', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>Back</button> {/* 뒤로가기 버튼 */}\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>ID:</label>\n          <input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </div>\n        <button type=\"submit\">로그인</button>\n        <button type=\"button\" onClick={() => navigate('/register')}>회원가입</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Main from './components/Main';\nimport Register from './components/Register';\nimport Login from './components/Login';\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Main />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}