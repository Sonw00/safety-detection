{"version":3,"sources":["components/Main.tsx","components/Register.tsx","components/Login.tsx","App.tsx","index.tsx"],"names":["Main","isLoggedIn","setIsLoggedIn","useState","csrfToken","setCsrfToken","navigate","useNavigate","useEffect","async","response","axios","get","data","is_logged_in","error","console","checkLoginStatus","fetchCsrfToken","_jsxs","children","_jsx","_Fragment","onClick","post","headers","Register","formData","setFormData","id","password","name","age","address","detailed_address","phone_num","guard_name","guard_phone_num","fetch","json","handleChange","e","_objectSpread","target","value","onSubmit","preventDefault","method","body","JSON","stringify","ok","alert","message","type","placeholder","onChange","required","Login","setId","setPassword","event","log","window","location","href","App","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58a8590f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Main = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [csrfToken, setCsrfToken] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // 로그인 상태 확인\n    const checkLoginStatus = async () => {\n      try {\n        const response = await axios.get('/api/check_login/');\n        setIsLoggedIn(response.data.is_logged_in);\n      } catch (error) {\n        console.error('로그인 상태 확인 중 오류 발생:', error);\n      }\n    };\n\n    // CSRF 토큰을 가져오는 함수\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get('/api/csrf_token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('CSRF 토큰을 가져오는 중 오류 발생:', error);\n      }\n    };\n\n    checkLoginStatus();\n    fetchCsrfToken();\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await axios.post('/api/logout/', {}, {\n        headers: {\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      setIsLoggedIn(false);\n      navigate('/login');\n    } catch (error) {\n      console.error('로그아웃 중 오류 발생:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Welcome to the Main Page</h1>\n      {isLoggedIn ? (\n        <>\n          <button onClick={handleLogout}>Logout</button>\n        </>\n      ) : (\n        <>\n          <button onClick={() => navigate('/login')}>Login</button>\n          <button onClick={() => navigate('/register')}>Register</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Main;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    id: '',\n    password: '',\n    name: '',\n    age: '',\n    address: '',\n    detailed_address: '',\n    phone_num: '',\n    guard_name: '',\n    guard_phone_num: ''\n  });\n  const [csrfToken, setCsrfToken] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      const response = await fetch('/api/csrf_token/');\n      const data = await response.json();\n      setCsrfToken(data.csrfToken);\n    };\n    fetchCsrfToken();\n  }, []);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const response = await fetch('/api/signup/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrfToken\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    if (response.ok) {\n      alert(data.message);\n      navigate('/login'); // 회원가입이 완료되면 로그인 페이지로 이동\n    } else {\n      alert(data.message);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>Back</button> {/* 뒤로가기 버튼 */}\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"id\" placeholder=\"ID\" onChange={handleChange} required />\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={handleChange} required />\n        <input type=\"number\" name=\"age\" placeholder=\"Age\" onChange={handleChange} required />\n        <input type=\"text\" name=\"address\" placeholder=\"Address\" onChange={handleChange} required />\n        <input type=\"text\" name=\"detailed_address\" placeholder=\"Detailed Address\" onChange={handleChange} />\n        <input type=\"text\" name=\"phone_num\" placeholder=\"Phone Number\" onChange={handleChange} required />\n        <input type=\"text\" name=\"guard_name\" placeholder=\"Guard Name\" onChange={handleChange} />\n        <input type=\"text\" name=\"guard_phone_num\" placeholder=\"Guard Phone Number\" onChange={handleChange} />\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Login = () => {\n  const [csrfToken, setCsrfToken] = useState<string | null>(null);\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    // CSRF 토큰을 가져오는 함수\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get('/api/csrf_token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('CSRF 토큰을 가져오는 중 오류 발생:', error);\n      }\n    };\n\n    fetchCsrfToken();\n  }, []);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/login/', {\n        id,\n        password\n      }, {\n        headers: {\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      console.log('로그인 성공:', response.data);\n      // 로그인 성공 시 메인 페이지로 이동\n      window.location.href = '/';\n    } catch (error) {\n      console.error('로그인 중 오류 발생:', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>Back</button> {/* 뒤로가기 버튼 */}\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>ID:</label>\n          <input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Main from './components/Main';\nimport Register from './components/Register';\nimport Login from './components/Login';\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Main />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}