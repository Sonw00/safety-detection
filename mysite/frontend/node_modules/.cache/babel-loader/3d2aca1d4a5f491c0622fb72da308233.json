{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Main=()=>{const[isLoggedIn,setIsLoggedIn]=useState(false);const[csrfToken,setCsrfToken]=useState(null);const[userInfo,setUserInfo]=useState(null);const navigate=useNavigate();useEffect(()=>{// 로그인 상태 확인\nconst checkLoginStatus=async()=>{try{const response=await axios.get('/api/check_login/');setIsLoggedIn(response.data.is_logged_in);if(response.data.is_logged_in){const userResponse=await axios.get('/api/user_info/');console.log('User Info:',userResponse.data);// 응답 데이터 출력\nsetUserInfo(userResponse.data);}}catch(error){console.error('로그인 상태 확인 중 오류 발생:',error);}};// CSRF 토큰을 가져오는 함수\nconst fetchCsrfToken=async()=>{try{const response=await axios.get('/api/csrf_token/');setCsrfToken(response.data.csrfToken);}catch(error){console.error('CSRF 토큰을 가져오는 중 오류 발생:',error);}};checkLoginStatus();fetchCsrfToken();},[]);const handleLogout=async()=>{try{await axios.post('/api/logout/',{},{headers:{'X-CSRFToken':csrfToken||''}});setIsLoggedIn(false);navigate('/login');}catch(error){console.error('로그아웃 중 오류 발생:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'flex-end',padding:'10px'},children:isLoggedIn?/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,style:{marginLeft:'10px'},children:\"Logout\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/login'),style:{marginLeft:'10px'},children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/register'),style:{marginLeft:'10px'},children:\"Register\"})]})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:'20px'},children:isLoggedIn&&userInfo?/*#__PURE__*/_jsxs(\"h1\",{children:[userInfo.name,\"\\uB2D8 (\",userInfo.age,\"\\uC138), \\uD604\\uC7AC \\uC6F9\\uC5D0 \\uC811\\uC18D\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"]}):/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to the Main Page\"})})]});};export default Main;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Main","isLoggedIn","setIsLoggedIn","csrfToken","setCsrfToken","userInfo","setUserInfo","navigate","checkLoginStatus","response","get","data","is_logged_in","userResponse","console","log","error","fetchCsrfToken","handleLogout","post","headers","children","style","display","justifyContent","padding","onClick","marginLeft","textAlign","marginTop","name","age"],"sources":["/home/azureuser/Desktop/son/safety-detection/mysite/frontend/src/components/Main.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Main = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [csrfToken, setCsrfToken] = useState<string | null>(null);\n  const [userInfo, setUserInfo] = useState<{ name: string; age: number } | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // 로그인 상태 확인\n    const checkLoginStatus = async () => {\n      try {\n        const response = await axios.get('/api/check_login/');\n        setIsLoggedIn(response.data.is_logged_in);\n        if (response.data.is_logged_in) {\n          const userResponse = await axios.get('/api/user_info/');\n          console.log('User Info:', userResponse.data); // 응답 데이터 출력\n          setUserInfo(userResponse.data);\n        }\n      } catch (error) {\n        console.error('로그인 상태 확인 중 오류 발생:', error);\n      }\n    };\n\n    // CSRF 토큰을 가져오는 함수\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get('/api/csrf_token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('CSRF 토큰을 가져오는 중 오류 발생:', error);\n      }\n    };\n\n    checkLoginStatus();\n    fetchCsrfToken();\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await axios.post('/api/logout/', {}, {\n        headers: {\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      setIsLoggedIn(false);\n      navigate('/login');\n    } catch (error) {\n      console.error('로그아웃 중 오류 발생:', error);\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ display: 'flex', justifyContent: 'flex-end', padding: '10px' }}>\n        {isLoggedIn ? (\n          <button onClick={handleLogout} style={{ marginLeft: '10px' }}>Logout</button>\n        ) : (\n          <>\n            <button onClick={() => navigate('/login')} style={{ marginLeft: '10px' }}>Login</button>\n            <button onClick={() => navigate('/register')} style={{ marginLeft: '10px' }}>Register</button>\n          </>\n        )}\n      </div>\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\n        {isLoggedIn && userInfo ? (\n          <h1>{userInfo.name}님 ({userInfo.age}세), 현재 웹에 접속하셨습니다!</h1>\n        ) : (\n          <h1>Welcome to the Main Page</h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}