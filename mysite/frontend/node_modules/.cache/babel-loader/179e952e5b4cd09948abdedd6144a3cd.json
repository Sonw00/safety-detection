{"ast":null,"code":"import _objectSpread from\"/home/azureuser/Desktop/son/safety-detection/mysite/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import{AlertCircle}from'lucide-react';import{useNavigate}from'react-router-dom';import Alert from'./ui/alert/Alert';import AlertDescription from'./ui/alert/AlertDescription';import*as echarts from'echarts';import dayjs from'dayjs';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Main=()=>{const[isLoggedIn,setIsLoggedIn]=useState(false);const[csrfToken,setCsrfToken]=useState(null);const[userInfo,setUserInfo]=useState(null);const[statuses,setStatuses]=useState([]);const[postures,setPostures]=useState([]);const[error,setError]=useState(null);const navigate=useNavigate();const postureTypes=[{value:0,name:'Downstair',color:'blue'},{value:1,name:'Upstair',color:'green'},{value:2,name:'Running',color:'yellow'},{value:3,name:'Sitdown',color:'red'},{value:4,name:'StandUp',color:'lightblue'},{value:5,name:'Walking',color:'purple'},{value:6,name:'Fall',color:'orange'}];useEffect(()=>{const checkLoginStatus=async()=>{try{const response=await fetch('/api/check_login/');const data=await response.json();setIsLoggedIn(data.is_logged_in);if(data.is_logged_in){const userResponse=await fetch('/api/user_info/');const userData=await userResponse.json();setUserInfo(userData);fetchUserStatus();fetchUserPosture();updateUserStatus();updateUserPosture();}}catch(error){setError('Failed to check login status');}};const fetchCsrfToken=async()=>{try{const response=await fetch('/api/csrf_token/');const data=await response.json();setCsrfToken(data.csrfToken);}catch(error){setError('Failed to fetch CSRF token');}};checkLoginStatus();fetchCsrfToken();const interval=setInterval(()=>{if(isLoggedIn){updateUserStatus();updateUserPosture();}},10*60*1000);return()=>clearInterval(interval);},[isLoggedIn]);const fetchUserStatus=async()=>{try{const response=await fetch('/api/get_status/');const data=await response.json();setStatuses(data.statuses);}catch(error){setError('Failed to fetch user status');}};const fetchUserPosture=async()=>{try{const response=await fetch('/api/get_user_posture/');const data=await response.json();// Transform data for Recharts\nconst transformedData=data.postures.map(item=>_objectSpread({time:new Date(item.updated_at).toLocaleString(),posture:item.posture},postureTypes.reduce((acc,type)=>_objectSpread(_objectSpread({},acc),{},{[type.name]:item.posture===type.value?1:0}),{})));setPostures(transformedData);renderPostureChart(data.postures);}catch(error){setError('Failed to fetch user posture');}};const updateUserStatus=async()=>{try{await fetch('/api/update_status/',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':csrfToken||''}});fetchUserStatus();}catch(error){setError('Failed to update user status');}};const updateUserPosture=async()=>{try{await fetch('/api/update_user_posture/',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':csrfToken||''}});fetchUserPosture();}catch(error){setError('Failed to update user posture');}};const handleLogout=async()=>{try{await fetch('/api/logout/',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':csrfToken||''}});setIsLoggedIn(false);setUserInfo(null);}catch(error){setError('Failed to logout');}};const renderPostureChart=data=>{const chartDom=document.getElementById('posture');if(!chartDom)return;const myChart=echarts.init(chartDom);const postureText=['Downstair','Upstair','Running','Sitdown','StandUp','Walking','Fall'];const sortedData=data.sort((a,b)=>new Date(a.updated_at).getTime()-new Date(b.updated_at).getTime());const option={tooltip:{trigger:'axis',axisPointer:{type:'shadow'},formatter:function(params){const hoveredSeries=params.find(param=>param.data>0);if(hoveredSeries){return\"\\uC0C1\\uD0DC: \".concat(hoveredSeries.seriesName);}return'';}},legend:{},grid:{left:'3%',right:'4%',bottom:'3%',containLabel:true},xAxis:{type:'category',data:sortedData.map(item=>dayjs(item.updated_at).format('MM-DD HH:mm:ss'))},yAxis:{type:'value'},series:postureText.map((text,index)=>({name:text,type:'bar',stack:'total',label:{show:true},emphasis:{focus:'series'},data:sortedData.map(item=>item.posture===index?1:0),itemStyle:{color:(()=>{switch(index){case 0:return'blue';// Downstair\ncase 1:return'green';// Upstair\ncase 2:return'yellow';// Running\ncase 3:return'red';// Sitdown\ncase 4:return'lightblue';// StandUp\ncase 5:return'purple';// Walking\ncase 6:return'orange';// Fall\ndefault:return'gray';}})()}}))};myChart.setOption(option);};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end mb-4\",children:isLoggedIn?/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\",children:\"Logout\"}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 mr-2\",onClick:()=>navigate('/login'),children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\",onClick:()=>navigate('/register'),children:\"Register\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mb-8\",children:isLoggedIn&&userInfo?/*#__PURE__*/_jsxs(\"h1\",{className:\"text-2xl font-bold\",children:[userInfo.name,\"\\uB2D8 (\",userInfo.age,\"\\uC138), \\uD604\\uC7AC \\uC6F9\\uC5D0 \\uC811\\uC18D\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"]}):/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:\"Welcome to the Main Page\"})}),error&&/*#__PURE__*/_jsxs(Alert,{variant:\"destructive\",className:\"mb-4\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(AlertDescription,{children:error})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-8\",children:/*#__PURE__*/_jsxs(LineChart,{width:800,height:400,data:statuses,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"updated_at\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"status\",stroke:\"#8884d8\"})]})}),/*#__PURE__*/_jsx(\"div\",{id:\"posture\",style:{width:'100%',height:'400px'}})]});};export default Main;","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","AlertCircle","useNavigate","Alert","AlertDescription","echarts","dayjs","jsx","_jsx","jsxs","_jsxs","Main","isLoggedIn","setIsLoggedIn","csrfToken","setCsrfToken","userInfo","setUserInfo","statuses","setStatuses","postures","setPostures","error","setError","navigate","postureTypes","value","name","color","checkLoginStatus","response","fetch","data","json","is_logged_in","userResponse","userData","fetchUserStatus","fetchUserPosture","updateUserStatus","updateUserPosture","fetchCsrfToken","interval","setInterval","clearInterval","transformedData","map","item","_objectSpread","time","Date","updated_at","toLocaleString","posture","reduce","acc","type","renderPostureChart","method","headers","handleLogout","chartDom","document","getElementById","myChart","init","postureText","sortedData","sort","a","b","getTime","option","tooltip","trigger","axisPointer","formatter","params","hoveredSeries","find","param","concat","seriesName","legend","grid","left","right","bottom","containLabel","xAxis","format","yAxis","series","text","index","stack","label","show","emphasis","focus","itemStyle","setOption","className","children","onClick","age","variant","width","height","strokeDasharray","dataKey","stroke","id","style"],"sources":["/home/azureuser/Desktop/son/safety-detection/mysite/frontend/src/components/ui/alert/AlertDescription.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { AlertCircle } from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport Alert from './ui/alert/Alert';\nimport AlertDescription from './ui/alert/AlertDescription';\nimport * as echarts from 'echarts';\nimport dayjs from 'dayjs';\n\nconst Main = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [csrfToken, setCsrfToken] = useState<string | null>(null);\n  const [userInfo, setUserInfo] = useState<{ name: string; age: number } | null>(null);\n  const [statuses, setStatuses] = useState([]);\n  const [postures, setPostures] = useState([]);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  const postureTypes = [\n    { value: 0, name: 'Downstair', color: 'blue' },\n    { value: 1, name: 'Upstair', color: 'green' },\n    { value: 2, name: 'Running', color: 'yellow' },\n    { value: 3, name: 'Sitdown', color: 'red' },\n    { value: 4, name: 'StandUp', color: 'lightblue' },\n    { value: 5, name: 'Walking', color: 'purple' },\n    { value: 6, name: 'Fall', color: 'orange' }\n  ];\n\n  useEffect(() => {\n    const checkLoginStatus = async () => {\n      try {\n        const response = await fetch('/api/check_login/');\n        const data = await response.json();\n        setIsLoggedIn(data.is_logged_in);\n        \n        if (data.is_logged_in) {\n          const userResponse = await fetch('/api/user_info/');\n          const userData = await userResponse.json();\n          setUserInfo(userData);\n          fetchUserStatus();\n          fetchUserPosture();\n          updateUserStatus();\n          updateUserPosture();\n        }\n      } catch (error) {\n        setError('Failed to check login status');\n      }\n    };\n\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await fetch('/api/csrf_token/');\n        const data = await response.json();\n        setCsrfToken(data.csrfToken);\n      } catch (error) {\n        setError('Failed to fetch CSRF token');\n      }\n    };\n\n    checkLoginStatus();\n    fetchCsrfToken();\n\n    const interval = setInterval(() => {\n      if (isLoggedIn) {\n        updateUserStatus();\n        updateUserPosture();\n      }\n    }, 10 * 60 * 1000);\n\n    return () => clearInterval(interval);\n  }, [isLoggedIn]);\n\n  const fetchUserStatus = async () => {\n    try {\n      const response = await fetch('/api/get_status/');\n      const data = await response.json();\n      setStatuses(data.statuses);\n    } catch (error) {\n      setError('Failed to fetch user status');\n    }\n  };\n\n  const fetchUserPosture = async () => {\n    try {\n      const response = await fetch('/api/get_user_posture/');\n      const data = await response.json();\n      \n      // Transform data for Recharts\n      const transformedData = data.postures.map((item: any) => ({\n        time: new Date(item.updated_at).toLocaleString(),\n        posture: item.posture,\n        ...postureTypes.reduce((acc, type) => ({\n          ...acc,\n          [type.name]: item.posture === type.value ? 1 : 0\n        }), {})\n      }));\n      \n      setPostures(transformedData);\n      renderPostureChart(data.postures);\n    } catch (error) {\n      setError('Failed to fetch user posture');\n    }\n  };\n\n  const updateUserStatus = async () => {\n    try {\n      await fetch('/api/update_status/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      fetchUserStatus();\n    } catch (error) {\n      setError('Failed to update user status');\n    }\n  };\n\n  const updateUserPosture = async () => {\n    try {\n      await fetch('/api/update_user_posture/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      fetchUserPosture();\n    } catch (error) {\n      setError('Failed to update user posture');\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/logout/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      setIsLoggedIn(false);\n      setUserInfo(null);\n    } catch (error) {\n      setError('Failed to logout');\n    }\n  };\n\n  const renderPostureChart = (data: { posture: number; updated_at: string }[]) => {\n    const chartDom = document.getElementById('posture');\n    if (!chartDom) return;\n    const myChart = echarts.init(chartDom);\n    const postureText = ['Downstair', 'Upstair', 'Running', 'Sitdown', 'StandUp', 'Walking', 'Fall'];\n    const sortedData = data.sort((a, b) => new Date(a.updated_at).getTime() - new Date(b.updated_at).getTime());\n\n    const option = {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        },\n        formatter: function (params: any) {\n          const hoveredSeries = params.find((param: any) => param.data > 0);\n          if (hoveredSeries) {\n            return `상태: ${hoveredSeries.seriesName}`;\n          }\n          return '';\n        }\n      },\n      legend: {},\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        data: sortedData.map(item => dayjs(item.updated_at).format('MM-DD HH:mm:ss'))\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: postureText.map((text, index) => ({\n        name: text,\n        type: 'bar',\n        stack: 'total',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: sortedData.map(item => (item.posture === index ? 1 : 0)),\n        itemStyle: {\n          color: (() => {\n            switch (index) {\n              case 0: return 'blue'; // Downstair\n              case 1: return 'green'; // Upstair\n              case 2: return 'yellow'; // Running\n              case 3: return 'red'; // Sitdown\n              case 4: return 'lightblue'; // StandUp\n              case 5: return 'purple'; // Walking\n              case 6: return 'orange'; // Fall\n              default: return 'gray';\n            }\n          })()\n        }\n      }))\n    };\n\n    myChart.setOption(option);\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex justify-end mb-4\">\n        {isLoggedIn ? (\n          <button \n            onClick={handleLogout}\n            className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\n          >\n            Logout\n          </button>\n        ) : (\n          <div>\n            <button className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 mr-2\" onClick={() => navigate('/login')}>\n              Login\n            </button>\n            <button className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\" onClick={() => navigate('/register')}>\n              Register\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"text-center mb-8\">\n        {isLoggedIn && userInfo ? (\n          <h1 className=\"text-2xl font-bold\">\n            {userInfo.name}님 ({userInfo.age}세), 현재 웹에 접속하셨습니다!\n          </h1>\n        ) : (\n          <h1 className=\"text-2xl font-bold\">Welcome to the Main Page</h1>\n        )}\n      </div>\n\n      {error && (\n        <Alert variant=\"destructive\" className=\"mb-4\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n\n      <div className=\"mb-8\">\n        <LineChart width={800} height={400} data={statuses}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"updated_at\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"status\" stroke=\"#8884d8\" />\n        </LineChart>\n      </div>\n\n      <div id=\"posture\" style={{ width: '100%', height: '400px' }}></div>\n    </div>\n  );\n};\n\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}