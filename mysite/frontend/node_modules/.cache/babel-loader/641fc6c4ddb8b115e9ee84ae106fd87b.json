{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Main=()=>{const[isLoggedIn,setIsLoggedIn]=useState(false);const[csrfToken,setCsrfToken]=useState(null);const navigate=useNavigate();useEffect(()=>{// 로그인 상태 확인\nconst checkLoginStatus=async()=>{try{const response=await axios.get('/api/check_login/');setIsLoggedIn(response.data.is_logged_in);}catch(error){console.error('로그인 상태 확인 중 오류 발생:',error);}};// CSRF 토큰을 가져오는 함수\nconst fetchCsrfToken=async()=>{try{const response=await axios.get('/api/csrf_token/');setCsrfToken(response.data.csrfToken);}catch(error){console.error('CSRF 토큰을 가져오는 중 오류 발생:',error);}};checkLoginStatus();fetchCsrfToken();},[]);const handleLogout=async()=>{try{await axios.post('/api/logout/',{},{headers:{'X-CSRFToken':csrfToken||''}});setIsLoggedIn(false);navigate('/login');}catch(error){console.error('로그아웃 중 오류 발생:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to the Main Page\"}),isLoggedIn?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/login'),children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/register'),children:\"Register\"})]})]});};export default Main;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Main","isLoggedIn","setIsLoggedIn","csrfToken","setCsrfToken","navigate","checkLoginStatus","response","get","data","is_logged_in","error","console","fetchCsrfToken","handleLogout","post","headers","children","onClick"],"sources":["/home/azureuser/Desktop/son/safety-detection/mysite/frontend/src/components/Main.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Main = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [csrfToken, setCsrfToken] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // 로그인 상태 확인\n    const checkLoginStatus = async () => {\n      try {\n        const response = await axios.get('/api/check_login/');\n        setIsLoggedIn(response.data.is_logged_in);\n      } catch (error) {\n        console.error('로그인 상태 확인 중 오류 발생:', error);\n      }\n    };\n\n    // CSRF 토큰을 가져오는 함수\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get('/api/csrf_token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('CSRF 토큰을 가져오는 중 오류 발생:', error);\n      }\n    };\n\n    checkLoginStatus();\n    fetchCsrfToken();\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await axios.post('/api/logout/', {}, {\n        headers: {\n          'X-CSRFToken': csrfToken || ''\n        }\n      });\n      setIsLoggedIn(false);\n      navigate('/login');\n    } catch (error) {\n      console.error('로그아웃 중 오류 발생:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Welcome to the Main Page</h1>\n      {isLoggedIn ? (\n        <>\n          <button onClick={handleLogout}>Logout</button>\n        </>\n      ) : (\n        <>\n          <button onClick={() => navigate('/login')}>Login</button>\n          <button onClick={() => navigate('/register')}>Register</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Main;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAgB,IAAI,CAAC,CAC/D,KAAM,CAAAe,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAe,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAAC,mBAAmB,CAAC,CACrDN,aAAa,CAACK,QAAQ,CAACE,IAAI,CAACC,YAAY,CAAC,CAC3C,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAED;AACA,KAAM,CAAAE,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAAC,kBAAkB,CAAC,CACpDJ,YAAY,CAACG,QAAQ,CAACE,IAAI,CAACN,SAAS,CAAC,CACvC,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAEDL,gBAAgB,CAAC,CAAC,CAClBO,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAtB,KAAK,CAACuB,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC,CAAE,CACnCC,OAAO,CAAE,CACP,aAAa,CAAEb,SAAS,EAAI,EAC9B,CACF,CAAC,CAAC,CACFD,aAAa,CAAC,KAAK,CAAC,CACpBG,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACvC,CACF,CAAC,CAED,mBACEZ,KAAA,QAAAkB,QAAA,eACEtB,IAAA,OAAAsB,QAAA,CAAI,0BAAwB,CAAI,CAAC,CAChChB,UAAU,cACTN,IAAA,CAAAE,SAAA,EAAAoB,QAAA,cACEtB,IAAA,WAAQuB,OAAO,CAAEJ,YAAa,CAAAG,QAAA,CAAC,QAAM,CAAQ,CAAC,CAC9C,CAAC,cAEHlB,KAAA,CAAAF,SAAA,EAAAoB,QAAA,eACEtB,IAAA,WAAQuB,OAAO,CAAEA,CAAA,GAAMb,QAAQ,CAAC,QAAQ,CAAE,CAAAY,QAAA,CAAC,OAAK,CAAQ,CAAC,cACzDtB,IAAA,WAAQuB,OAAO,CAAEA,CAAA,GAAMb,QAAQ,CAAC,WAAW,CAAE,CAAAY,QAAA,CAAC,UAAQ,CAAQ,CAAC,EAC/D,CACH,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}